definitions = <definitions xmlns="http://ws.apache.org/ns/synapse">\n\n</definitions>

api = <api name=\"$0\" context=\"$1\" xmlns="http://ws.apache.org/ns/synapse">\n\t<resource methods=\"GET\" uri-template=\"$5\">\n\t\t<inSequence>$2</inSequence>\n\t</resource>\n</api>$4

endpoint = <endpoint name=\"$0\" xmlns="http://ws.apache.org/ns/synapse">\n\t<default/>\n</endpoint>$1

inbound = <inboundEndpoint name=\"$0\" sequence=\"$1\" protocol=\"http\" suspend=\"false\" xmlns="http://ws.apache.org/ns/synapse">\n\t<parameters>\n\t\t<parameter name=\"$2\">$3</parameter>\n\t</parameters>\n</inboundEndpoint>

proxy = <proxy name="" xmlns="http://ws.apache.org/ns/synapse">\n\t<target>\n\t\t<inSequence/>\n\t\t<endpoint/>\n\t</target>\n</proxy>

sequence = <sequence name=\"$0\" xmlns="http://ws.apache.org/ns/synapse">\n\t<log level=\"custom\">$1</log>\n\t<property name=\"$2\" />\n</sequence>

registry = <registry provider=\"$1\"></registry>

inboundEndpoint = <inboundEndpoint xmlns="http://ws.apache.org/ns/synapse" name=\"$1\" sequence=\"$2\" protocol="http" suspend=\"false\">\n\t<parameters>\n\t\t<parameter name=""></parameter>\n\t</parameters></inboundEndpoint>

localEntry = <localEntry key=\"$1\" xmlns="http://ws.apache.org/ns/synapse"></localEntry>

messageStore = <messageStore name=\"$1\" class=\"$2\" xmlns="http://ws.apache.org/ns/synapse"></messageStore>

messageProcessor = <messageProcessor name=\"$1\" class=\"$2\" messageStore=\"$3\" xmlns="http://ws.apache.org/ns/synapse">\t$4</messageProcessor>

task = <task name=\"$1\" class=\"$2\" xmlns="http://ws.apache.org/ns/synapse">\n\t<trigger></trigger>\n</task>

template = template

call = <call>\n\t<endpoint/>\n</call>

call-template = <call-template target=\"$1\">\n\t<with-param name=\"$2\" value=\"$3\" />\n</call-template>

drop = <drop/>

log = <log level=\"custom\"></log>

loopback = <loopback/>

respond = <respond/>

property = <property name=\"$0\" >$1</property>

send = <send>\n\t<endpoint/>\n</send>

sequence = <sequence key="name"/>

store = <store messageStore=""></store>

conditionalRouter = <conditionalRouter>\n\t<route breakRoute="false">\n\t\t<condition></condition>\n\t\t<target></target>\n\t<route/>\n</conditionalRouter>

filter = <filter>\n\t<then></then>\n\t<else></else>\n</filter>

switch = <switch>\n\t<case regex=\"$1\"></case>\n</switch>

validate = <validate>\n\t<schema key=\"$1\"></schema>\n</validate>

resource = <resource>\n\t<inSequence>$0</inSequence>/n\t<outSequence>$1</outSequence>\n</resource>

xml = <?xml version="1.0" encoding="UTF-8"?>







